{
  "address": "0x56598E921FA0Ca5C37907fd581F13D75474f4338",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_api",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe_NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "CheaperWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumUsd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x581de95d060a6c3c32b07c430e6c1ec9019d95b3e66d297c7e33a3429f6b0ed8",
  "receipt": {
    "to": null,
    "from": "0x794210836bE01198690dE7Dcac0f4039F6FC6cEd",
    "contractAddress": "0x56598E921FA0Ca5C37907fd581F13D75474f4338",
    "transactionIndex": 80,
    "gasUsed": "934904",
    "logsBloom": "0x
    "blockHash": "0x1e8e10f3aa3824bf3c140b13cd0987cf29daa40bc91b2e54b85d8ba980f5f41a",
    "transactionHash": "0x581de95d060a6c3c32b07c430e6c1ec9019d95b3e66d297c7e33a3429f6b0ed8",
    "logs": [],
    "blockNumber": 8590843,
    "cumulativeGasUsed": "10067303",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 2,
  "solcInputHash": "7f4e0f594c5aca4f3e52f4c244ec4e2f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_api\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe_NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"CheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// Get funds from users\\r\\n// Withdraw funds\\r\\n// Set a minimum unding value in usd\\r\\n\\r\\n// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.7;\\r\\n// importing aggregatorv3 interface which can hold any contract\\r\\nimport \\\"./PriceConverter.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\n\\r\\n\\r\\n// creating custom error const less gas as require uses strings to revert and it const gases\\r\\nerror FundMe_NotOwner();\\r\\n\\r\\n// two keyword for optimal constant and immutable\\r\\ncontract FundMe {\\r\\n\\r\\n    // mentioning for which first argument will be library functions be used\\r\\n    using PriceConverter for uint256;\\r\\n\\r\\n  \\r\\n    uint256 public constant minimumUsd = 1 * 1e18; // minimum 0.006 wther\\r\\n    \\r\\n    // funder array\\r\\n    address[] public funders;\\r\\n    mapping(address => uint256) public addressToAmountFunded;\\r\\n    \\r\\n    // owner\\r\\n    // immutable is also gas efficient and use for variables where owner is set only once\\r\\n    address public immutable owner;\\r\\n    AggregatorV3Interface public priceFeed;\\r\\n    // use deploy contract to get owner address\\r\\n    constructor(address _api) {\\r\\n        owner = msg.sender;\\r\\n        priceFeed = AggregatorV3Interface(_api);\\r\\n    }\\r\\n    \\r\\n    // payable function allows sending wther to contract\\r\\n    function fund() public payable {\\r\\n        // chain link allows to get real world data\\r\\n        require(msg.value.getConversionRate(priceFeed) >= minimumUsd, \\\"Didn't Send enough!\\\");\\r\\n        // saving funders address\\r\\n        funders.push(msg.sender);\\r\\n        addressToAmountFunded[msg.sender] = msg.value;\\r\\n       \\r\\n    }\\r\\n\\r\\n\\r\\n    function withdraw() public onlyOwner {\\r\\n        for(uint256 i = 0; i < funders.length; i++) {\\r\\n            address funderAddress = funders[i];\\r\\n            addressToAmountFunded[funderAddress] = 0;\\r\\n        }\\r\\n       \\r\\n        funders = new address[](0);\\r\\n        (bool CallSuccess,) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\r\\n        require(CallSuccess, \\\"Call Failed\\\");\\r\\n    }\\r\\n\\r\\n    function CheaperWithdraw() public onlyOwner {\\r\\n        address[] memory m_funders = funders;\\r\\n        for(uint256 i = 0; i < m_funders.length; i++) {\\r\\n            address funderAddress = m_funders[i];\\r\\n            addressToAmountFunded[funderAddress] = 0;\\r\\n        }\\r\\n       \\r\\n        funders = new address[](0);\\r\\n        (bool CallSuccess,) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\r\\n        require(CallSuccess, \\\"Call Failed\\\");\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner {\\r\\n        if(msg.sender != owner) {revert FundMe_NotOwner();}\\r\\n        _;\\r\\n    }\\r\\n    receive() external payable{\\r\\n        fund();\\r\\n    } \\r\\n\\r\\n    fallback() external payable{\\r\\n        fund();\\r\\n    }\\r\\n\\r\\n}\\r\\n\",\"keccak256\":\"0x4830e9bfba3b0aa2ed72337d6d33f3402908d4b247b6d8ec0ba09931cf16544b\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// library for math functions\\r\\n\\r\\n// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter {\\r\\n\\r\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns(uint256){\\r\\n        \\r\\n        (, int price,,,) = priceFeed.latestRoundData();\\r\\n       \\r\\n        return uint256(price);\\r\\n    }\\r\\n\\r\\n\\r\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed) internal view returns (uint256) {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n       \\r\\n        uint256 ethAmountUsd = ethPrice * ethAmount / 1e8;\\r\\n        return ethAmountUsd;\\r\\n    }\\r\\n\\r\\n\\r\\n}\",\"keccak256\":\"0x4345edcbd6b378915bbecbc9b82f2c81b9a2096aa8446528c8d0ea078a9a42a0\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620011023803806200110283398181016040528101906200003791906200011d565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200014f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e582620000b8565b9050919050565b620000f781620000d8565b81146200010357600080fd5b50565b6000815190506200011781620000ec565b92915050565b600060208284031215620001365762000135620000b3565b5b6000620001468482850162000106565b91505092915050565b608051610f8962000179600039600081816103010152818161057f01526105a30152610f896000f3fe60806040526004361061007f5760003560e01c80638da5cb5b1161004e5780638da5cb5b1461014257806397f4d9ca1461016d578063b60d428814610184578063dc0d3dff1461018e5761008e565b8063098de820146100985780633ccfd60b146100c35780633e47d6f3146100da578063741bef1a146101175761008e565b3661008e5761008c6101cb565b005b6100966101cb565b005b3480156100a457600080fd5b506100ad6102f3565b6040516100ba91906109fd565b60405180910390f35b3480156100cf57600080fd5b506100d86102ff565b005b3480156100e657600080fd5b5061010160048036038101906100fc9190610a7b565b61053f565b60405161010e91906109fd565b60405180910390f35b34801561012357600080fd5b5061012c610557565b6040516101399190610b07565b60405180910390f35b34801561014e57600080fd5b5061015761057d565b6040516101649190610b31565b60405180910390f35b34801561017957600080fd5b506101826105a1565b005b61018c6101cb565b005b34801561019a57600080fd5b506101b560048036038101906101b09190610b78565b610845565b6040516101c29190610b31565b60405180910390f35b670de0b6b3a7640000610209600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461088490919063ffffffff16565b101561024a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024190610c02565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b670de0b6b3a764000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610384576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561042f5760008082815481106103a9576103a8610c22565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061042790610c80565b915050610387565b50600067ffffffffffffffff81111561044b5761044a610cc8565b5b6040519080825280602002602001820160405280156104795781602001602082028036833780820191505090505b506000908051906020019061048f92919061093d565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104b690610d28565b60006040518083038185875af1925050503d80600081146104f3576040519150601f19603f3d011682016040523d82523d6000602084013e6104f8565b606091505b505090508061053c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053390610d89565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610626576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106a957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161065f575b5050505050905060005b81518110156107345760008282815181106106d1576106d0610c22565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061072c90610c80565b9150506106b3565b50600067ffffffffffffffff8111156107505761074f610cc8565b5b60405190808252806020026020018201604052801561077e5781602001602082028036833780820191505090505b506000908051906020019061079492919061093d565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516107bb90610d28565b60006040518083038185875af1925050503d80600081146107f8576040519150601f19603f3d011682016040523d82523d6000602084013e6107fd565b606091505b5050905080610841576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083890610d89565b60405180910390fd5b5050565b6000818154811061085557600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080610890836108bc565b905060006305f5e10085836108a59190610da9565b6108af9190610e1a565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561090a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092e9190610ed8565b50505091505080915050919050565b8280548282559060005260206000209081019282156109b6579160200282015b828111156109b55782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061095d565b5b5090506109c391906109c7565b5090565b5b808211156109e05760008160009055506001016109c8565b5090565b6000819050919050565b6109f7816109e4565b82525050565b6000602082019050610a1260008301846109ee565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a4882610a1d565b9050919050565b610a5881610a3d565b8114610a6357600080fd5b50565b600081359050610a7581610a4f565b92915050565b600060208284031215610a9157610a90610a18565b5b6000610a9f84828501610a66565b91505092915050565b6000819050919050565b6000610acd610ac8610ac384610a1d565b610aa8565b610a1d565b9050919050565b6000610adf82610ab2565b9050919050565b6000610af182610ad4565b9050919050565b610b0181610ae6565b82525050565b6000602082019050610b1c6000830184610af8565b92915050565b610b2b81610a3d565b82525050565b6000602082019050610b466000830184610b22565b92915050565b610b55816109e4565b8114610b6057600080fd5b50565b600081359050610b7281610b4c565b92915050565b600060208284031215610b8e57610b8d610a18565b5b6000610b9c84828501610b63565b91505092915050565b600082825260208201905092915050565b7f4469646e27742053656e6420656e6f7567682100000000000000000000000000600082015250565b6000610bec601383610ba5565b9150610bf782610bb6565b602082019050919050565b60006020820190508181036000830152610c1b81610bdf565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c8b826109e4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610cbd57610cbc610c51565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d12600083610cf7565b9150610d1d82610d02565b600082019050919050565b6000610d3382610d05565b9150819050919050565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610d73600b83610ba5565b9150610d7e82610d3d565b602082019050919050565b60006020820190508181036000830152610da281610d66565b9050919050565b6000610db4826109e4565b9150610dbf836109e4565b9250828202610dcd816109e4565b91508282048414831517610de457610de3610c51565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e25826109e4565b9150610e30836109e4565b925082610e4057610e3f610deb565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e6a81610e4b565b8114610e7557600080fd5b50565b600081519050610e8781610e61565b92915050565b6000819050919050565b610ea081610e8d565b8114610eab57600080fd5b50565b600081519050610ebd81610e97565b92915050565b600081519050610ed281610b4c565b92915050565b600080600080600060a08688031215610ef457610ef3610a18565b5b6000610f0288828901610e78565b9550506020610f1388828901610eae565b9450506040610f2488828901610ec3565b9350506060610f3588828901610ec3565b9250506080610f4688828901610e78565b915050929550929590935056fea264697066735822122003057a161ffcdbc56b3f80b102cddd0ca185fedf6014efed29f2471adba2443364736f6c63430008110033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c80638da5cb5b1161004e5780638da5cb5b1461014257806397f4d9ca1461016d578063b60d428814610184578063dc0d3dff1461018e5761008e565b8063098de820146100985780633ccfd60b146100c35780633e47d6f3146100da578063741bef1a146101175761008e565b3661008e5761008c6101cb565b005b6100966101cb565b005b3480156100a457600080fd5b506100ad6102f3565b6040516100ba91906109fd565b60405180910390f35b3480156100cf57600080fd5b506100d86102ff565b005b3480156100e657600080fd5b5061010160048036038101906100fc9190610a7b565b61053f565b60405161010e91906109fd565b60405180910390f35b34801561012357600080fd5b5061012c610557565b6040516101399190610b07565b60405180910390f35b34801561014e57600080fd5b5061015761057d565b6040516101649190610b31565b60405180910390f35b34801561017957600080fd5b506101826105a1565b005b61018c6101cb565b005b34801561019a57600080fd5b506101b560048036038101906101b09190610b78565b610845565b6040516101c29190610b31565b60405180910390f35b670de0b6b3a7640000610209600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461088490919063ffffffff16565b101561024a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024190610c02565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b670de0b6b3a764000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610384576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561042f5760008082815481106103a9576103a8610c22565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061042790610c80565b915050610387565b50600067ffffffffffffffff81111561044b5761044a610cc8565b5b6040519080825280602002602001820160405280156104795781602001602082028036833780820191505090505b506000908051906020019061048f92919061093d565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104b690610d28565b60006040518083038185875af1925050503d80600081146104f3576040519150601f19603f3d011682016040523d82523d6000602084013e6104f8565b606091505b505090508061053c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053390610d89565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610626576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106a957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161065f575b5050505050905060005b81518110156107345760008282815181106106d1576106d0610c22565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061072c90610c80565b9150506106b3565b50600067ffffffffffffffff8111156107505761074f610cc8565b5b60405190808252806020026020018201604052801561077e5781602001602082028036833780820191505090505b506000908051906020019061079492919061093d565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516107bb90610d28565b60006040518083038185875af1925050503d80600081146107f8576040519150601f19603f3d011682016040523d82523d6000602084013e6107fd565b606091505b5050905080610841576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083890610d89565b60405180910390fd5b5050565b6000818154811061085557600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080610890836108bc565b905060006305f5e10085836108a59190610da9565b6108af9190610e1a565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561090a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092e9190610ed8565b50505091505080915050919050565b8280548282559060005260206000209081019282156109b6579160200282015b828111156109b55782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061095d565b5b5090506109c391906109c7565b5090565b5b808211156109e05760008160009055506001016109c8565b5090565b6000819050919050565b6109f7816109e4565b82525050565b6000602082019050610a1260008301846109ee565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a4882610a1d565b9050919050565b610a5881610a3d565b8114610a6357600080fd5b50565b600081359050610a7581610a4f565b92915050565b600060208284031215610a9157610a90610a18565b5b6000610a9f84828501610a66565b91505092915050565b6000819050919050565b6000610acd610ac8610ac384610a1d565b610aa8565b610a1d565b9050919050565b6000610adf82610ab2565b9050919050565b6000610af182610ad4565b9050919050565b610b0181610ae6565b82525050565b6000602082019050610b1c6000830184610af8565b92915050565b610b2b81610a3d565b82525050565b6000602082019050610b466000830184610b22565b92915050565b610b55816109e4565b8114610b6057600080fd5b50565b600081359050610b7281610b4c565b92915050565b600060208284031215610b8e57610b8d610a18565b5b6000610b9c84828501610b63565b91505092915050565b600082825260208201905092915050565b7f4469646e27742053656e6420656e6f7567682100000000000000000000000000600082015250565b6000610bec601383610ba5565b9150610bf782610bb6565b602082019050919050565b60006020820190508181036000830152610c1b81610bdf565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c8b826109e4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610cbd57610cbc610c51565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d12600083610cf7565b9150610d1d82610d02565b600082019050919050565b6000610d3382610d05565b9150819050919050565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610d73600b83610ba5565b9150610d7e82610d3d565b602082019050919050565b60006020820190508181036000830152610da281610d66565b9050919050565b6000610db4826109e4565b9150610dbf836109e4565b9250828202610dcd816109e4565b91508282048414831517610de457610de3610c51565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e25826109e4565b9150610e30836109e4565b925082610e4057610e3f610deb565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e6a81610e4b565b8114610e7557600080fd5b50565b600081519050610e8781610e61565b92915050565b6000819050919050565b610ea081610e8d565b8114610eab57600080fd5b50565b600081519050610ebd81610e97565b92915050565b600081519050610ed281610b4c565b92915050565b600080600080600060a08688031215610ef457610ef3610a18565b5b6000610f0288828901610e78565b9550506020610f1388828901610eae565b9450506040610f2488828901610ec3565b9350506060610f3588828901610ec3565b9250506080610f4688828901610e78565b915050929550929590935056fea264697066735822122003057a161ffcdbc56b3f80b102cddd0ca185fedf6014efed29f2471adba2443364736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}